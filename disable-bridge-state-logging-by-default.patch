diff -r -u linux-5.4.72/net/bridge/br.c linux-5.4.72-modified/net/bridge/br.c
--- linux-5.4.72/net/bridge/br.c	2020-10-17 11:11:24.000000000 +0300
+++ linux-5.4.72-modified/net/bridge/br.c	2020-10-21 19:23:08.641743863 +0300
@@ -391,6 +391,9 @@
 	br_fdb_fini();
 }
 
+bool br_state_logging = false;
+module_param_named(state_logging, br_state_logging, bool, 0444);
+
 module_init(br_init)
 module_exit(br_deinit)
 MODULE_LICENSE("GPL");
diff -r -u linux-5.4.72/net/bridge/br_private.h linux-5.4.72-modified/net/bridge/br_private.h
--- linux-5.4.72/net/bridge/br_private.h	2020-10-17 11:11:24.000000000 +0300
+++ linux-5.4.72-modified/net/bridge/br_private.h	2020-10-21 19:23:08.641743863 +0300
@@ -542,6 +542,7 @@
 {
 }
 #endif
+extern bool br_state_logging;
 
 /* br_fdb.c */
 int br_fdb_init(void);
diff -r -u linux-5.4.72/net/bridge/br_stp.c linux-5.4.72-modified/net/bridge/br_stp.c
--- linux-5.4.72/net/bridge/br_stp.c	2020-10-17 11:11:24.000000000 +0300
+++ linux-5.4.72-modified/net/bridge/br_stp.c	2020-10-21 19:24:26.474035091 +0300
@@ -41,7 +41,7 @@
 	if (err && err != -EOPNOTSUPP)
 		br_warn(p->br, "error setting offload STP state on port %u(%s)\n",
 				(unsigned int) p->port_no, p->dev->name);
-	else
+	else if (br_state_logging)
 		br_info(p->br, "port %u(%s) entered %s state\n",
 				(unsigned int) p->port_no, p->dev->name,
 				br_port_state_names[p->state]);
@@ -336,8 +336,9 @@
 	if (br->stp_enabled != BR_KERNEL_STP)
 		return;
 
-	br_info(br, "topology change detected, %s\n",
-		isroot ? "propagating" : "sending tcn bpdu");
+	if (br_state_logging)
+		br_info(br, "topology change detected, %s\n",
+			isroot ? "propagating" : "sending tcn bpdu");
 
 	if (isroot) {
 		__br_set_topology_change(br, 1);
@@ -518,8 +519,9 @@
 void br_received_tcn_bpdu(struct net_bridge_port *p)
 {
 	if (br_is_designated_port(p)) {
-		br_info(p->br, "port %u(%s) received tcn bpdu\n",
-			(unsigned int) p->port_no, p->dev->name);
+		if (br_state_logging)
+			br_info(p->br, "port %u(%s) received tcn bpdu\n",
+				(unsigned int) p->port_no, p->dev->name);
 
 		br_topology_change_detection(p->br);
 		br_topology_change_acknowledge(p);
